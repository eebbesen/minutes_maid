{"version":3,"sources":["webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/universalModuleDefinition","webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/bootstrap","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core\",\"commonjs\":\"./foundation.core\",\"commonjs2\":\"./foundation.core\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.keyboard\"],\"amd\":\"./foundation.util.keyboard\",\"commonjs\":\"./foundation.util.keyboard\",\"commonjs2\":\"./foundation.util.keyboard\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.motion\"],\"amd\":\"./foundation.util.motion\",\"commonjs\":\"./foundation.util.motion\",\"commonjs2\":\"./foundation.util.motion\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.touch\"],\"amd\":\"./foundation.util.touch\",\"commonjs\":\"./foundation.util.touch\",\"commonjs2\":\"./foundation.util.touch\"}","webpack://__FOUNDATION_EXTERNAL__.[name]/js/entries/plugins/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.util.triggers.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__foundation_core__","__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__","__WEBPACK_EXTERNAL_MODULE__foundation_util_motion__","__WEBPACK_EXTERNAL_MODULE__foundation_util_touch__","__WEBPACK_EXTERNAL_MODULE_jquery__","installedModules","__webpack_require__","m","r","__webpack_exports__","_foundation_core__WEBPACK_IMPORTED_MODULE_0__","d","_foundation_slider__WEBPACK_IMPORTED_MODULE_1__","Foundation","plugin","Slider","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_foundation_util_keyboard__WEBPACK_IMPORTED_MODULE_1__","_foundation_util_motion__WEBPACK_IMPORTED_MODULE_2__","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_3__","_foundation_util_touch__WEBPACK_IMPORTED_MODULE_4__","_foundation_util_triggers__WEBPACK_IMPORTED_MODULE_5__","clearTimeout","element","options","this","$element","$","extend","defaults","data","className","Touch","init","Triggers","_init","Keyboard","register","ltr","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","ARROW_LEFT","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","HOME","END","rtl","inputs","find","handles","$handle","eq","$input","length","concat","attr","$fill","css","vertical","disabled","disabledClass","add","binding","doubleSided","$handle2","$input2","isDbl","_setInitAttr","setHandles","key","_this2","val","_setHandlePos","pctOfBar","percent","_logTransform","positionValueFunction","toFixed","_powTransform","value","parseFloat","end","start","absPosition","Math","abs","position","base","$hndl","location","index","h2Val","step","h1Val","_this","vert","hOrW","getBoundingClientRect","lOrT","_pctOfBar","pxToMove","elemDim","handleDim","decimal","dim","handlePct","isLeftHndl","movement","style","cb","handlePos","isNaN","initialStart","one","moveTime","timeout","setTimeout","idx","Object","initVal","id","max","min","role","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","tabindex","_adjustValue","e","preventDefault","param","pageY","pageX","direction","eventOffset","scrollTop","scrollLeft","barDim","elemOffset","windowScroll","barXY","eventFromBar","_value","offsetPct","hasVal","prev_val","left","next_val","div","_eventsForHandle","curHandle","off","on","keyCode","handleChangeEvent","call","clickSelect","target","is","_handleEvent","draggable","addTouch","$body","removeClass","_$handle","handleKey","decrease","oldValue","decrease_fast","increase","increase_fast","handled","newValue","dir","clickPos","frac","num","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_1__","_typeof","obj","Symbol","iterator","constructor","prototype","el","type","split","forEach","MutationObserver","prefixes","i","Listeners","Basic","timer","args","Array","slice","arguments","debounce","Global","openListener","Initializers","closeListener","toggleListener","trigger","closeableListener","stopPropagation","animation","Motion","animateOut","toggleFocusListener","fadeOut","triggerHandler","$elem","addCloseListener","addToggleListener","addCloseableListener","addToggleFocusListener","$nodes","resizeListener","each","scrollListener","not","pluginId","closeMeListener","plugins","addClosemeListener","pluginName","plugNames","console","push","error","listeners","map","name","addResizeListener","debounceGlobalListener","addScrollListener","listeningElementsMutation","mutationRecordsList","$target","attributeName","closest","observe","attributes","childList","characterData","elementObserver","addSimpleListeners","$document","document","addOpenListener","addMutationEventsListener","addGlobalListeners","triggersInitialized","onLoad","c","getter","o","defineProperty","enumerable","get","toStringTag","t","mode","__esModule","ns","create","bind","object","property","hasOwnProperty","p","s","moduleId","l","modules"],"mappings":"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","file":"foundation.slider.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"./foundation.core\", \"./foundation.util.keyboard\", \"./foundation.util.motion\", \"./foundation.util.touch\", \"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foundation.slider\"] = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse\n\t\troot[\"__FOUNDATION_EXTERNAL__\"] = root[\"__FOUNDATION_EXTERNAL__\"] || {}, root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.slider\"] = factory(root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.keyboard\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.motion\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.touch\"], root[\"jQuery\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__foundation_core__, __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__, __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__, __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__, __WEBPACK_EXTERNAL_MODULE_jquery__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__;","import { Foundation } from './foundation.core';\n\nimport { Slider } from '../../foundation.slider';\nFoundation.plugin(Slider, 'Slider');\n\nexport { Foundation, Slider };\n","'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { Move } from './foundation.util.motion';\nimport { GetYoDigits, rtl as Rtl } from './foundation.core.utils';\n\nimport { Plugin } from './foundation.core.plugin';\n\nimport { Touch } from './foundation.util.touch';\n\nimport { Triggers } from './foundation.util.triggers';\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider extends Plugin {\n  /**\n   * Creates a new instance of a slider control.\n   * @class\n   * @name Slider\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n    this.className = 'Slider'; // ie9 back compat\n\n  // Touch and Triggers inits are idempotent, we just need to make sure it's initialied.\n    Touch.init($);\n    Triggers.init($);\n\n    this._init();\n\n    Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast',\n        'HOME': 'min',\n        'END': 'max'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var isDbl = false,\n        _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n\n    this._setInitAttr(0);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n      isDbl = true;\n\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n    }\n\n    // Set handle positions\n    this.setHandles();\n\n    this._events();\n  }\n\n  setHandles() {\n    if(this.handles[1]) {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), () => {\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val());\n      });\n    } else {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val());\n    }\n  }\n\n  _reflow() {\n    this.setHandles();\n  }\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n  */\n  _pctOfBar(value) {\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\n\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    }\n\n    return pctOfBar.toFixed(2)\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n  */\n  _value(pctOfBar) {\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    }\n\n    var value\n    if (this.options.vertical) {\n      // linear interpolation which is working with negative values for start\n      // https://math.stackexchange.com/a/1019084\n      value = parseFloat(this.options.end) + pctOfBar * (this.options.start - this.options.end)\n    } else {\n      value = (this.options.end - this.options.start) * pctOfBar + parseFloat(this.options.start);\n    }\n\n    return value\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n  */\n  _logTransform(value) {\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n  */\n  _powTransform(value) {\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed\n   */\n  _setHandlePos($hndl, location, cb) {\n    // don't move if the slider has been disabled since its initialization\n    if (this.$element.hasClass(this.options.disabledClass)) {\n      return;\n    }\n    //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Move(moveTime, $hndl, function() {\n      // adjusting the left/top property of the handle, based on the percentage calculated above\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n      // fall back to next best guess.\n      if (isNaN(movement)) {\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\n      }\n      else {\n        $hndl.css(lOrT, `${movement}%`);\n      }\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n\n\n    /**\n     * Fires when the value has not been change for a given time.\n     * @event Slider#changed\n     */\n    clearTimeout(_this.timeout);\n    _this.timeout = setTimeout(function(){\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\n    }, _this.options.changedDelay);\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\n    var id = this.inputs.eq(idx).attr('id') || GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.inputs.eq(idx).val(initVal);\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': initVal,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          eventOffset = vertical ? e.pageY : e.pageX,\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n\n      var elemOffset = this.$element.offset()[direction];\n\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n      // best way to guess this is simulated is if clientY == pageY\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\n      var eventFromBar = eventOffset - elemOffset;\n      var barXY;\n      if (eventFromBar < 0) {\n        barXY = 0;\n      } else if (eventFromBar > barDim) {\n        barXY = barDim;\n      } else {\n        barXY = eventFromBar;\n      }\n      var offsetPct = percent(barXY, barDim);\n\n      value = this._value(offsetPct);\n\n      // turn everything around for RTL, yay math!\n      if (Rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    if (val >= 0) {\n      left = val % step;\n    } else {\n      left = step + (val % step);\n    }\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   */\n  _events() {\n    this._eventsForHandle(this.$handle);\n    if(this.handles[1]) {\n      this._eventsForHandle(this.$handle2);\n    }\n  }\n\n\n  /**\n   * Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _eventsForHandle($handle) {\n    var _this = this,\n        curHandle,\n        timer;\n\n      const handleChangeEvent = function(e) {\n        const idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      };\n\n      // IE only triggers the change event when the input loses focus which strictly follows the HTML specification\n      // listen for the enter key and trigger a change\n      // @see https://html.spec.whatwg.org/multipage/input.html#common-input-element-events\n      this.inputs.off('keyup.zf.slider').on('keyup.zf.slider', function (e) {\n        if(e.keyCode == 13) handleChangeEvent.call(this, e);\n      });\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', handleChangeEvent);\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      })\n      // prevent events triggered by touch\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\n        e.preventDefault();\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        min: function() {\n          newValue = _this.options.start;\n        },\n        max: function() {\n          newValue = _this.options.end;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  _destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    clearTimeout(this.timeout);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @type {number}\n   * @default 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @type {number}\n   * @default 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @type {number}\n   * @default 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @type {string}\n   * @default 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  invertVertical: false,\n  /**\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @type {number}\n   * @default 500\n   */\n  changedDelay: 500,\n  /**\n  * Basevalue for non-linear sliders\n  * @option\n  * @type {number}\n  * @default 5\n  */\n  nonLinearBase: 5,\n  /**\n  * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @type {string}\n  * @default 'linear'\n  */\n  positionValueFunction: 'linear',\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\nfunction baseLog(base, value) {\n  return Math.log(value)/Math.log(base)\n}\n\nexport {Slider};\n","'use strict';\n\nimport $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Motion } from './foundation.util.motion';\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n\nvar Triggers = {\n  Listeners: {\n    Basic: {},\n    Global: {}\n  },\n  Initializers: {}\n}\n\nTriggers.Listeners.Basic  = {\n  openListener: function() {\n    triggers($(this), 'open');\n  },\n  closeListener: function() {\n    let id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  },\n  toggleListener: function() {\n    let id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  },\n  closeableListener: function(e) {\n    let animation = $(this).data('closable');\n\n    // Only close the first closable element. See https://git.io/zf-7833\n    e.stopPropagation();\n\n    if(animation !== ''){\n      Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  },\n  toggleFocusListener: function() {\n    let id = $(this).data('toggle-focus');\n    $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n  }\n};\n\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\nTriggers.Initializers.addOpenListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.openListener);\n  $elem.on('click.zf.trigger', '[data-open]', Triggers.Listeners.Basic.openListener);\n}\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\nTriggers.Initializers.addCloseListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.closeListener);\n  $elem.on('click.zf.trigger', '[data-close]', Triggers.Listeners.Basic.closeListener);\n}\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\nTriggers.Initializers.addToggleListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.toggleListener);\n  $elem.on('click.zf.trigger', '[data-toggle]', Triggers.Listeners.Basic.toggleListener);\n}\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\nTriggers.Initializers.addCloseableListener = ($elem) => {\n  $elem.off('close.zf.trigger', Triggers.Listeners.Basic.closeableListener);\n  $elem.on('close.zf.trigger', '[data-closeable], [data-closable]', Triggers.Listeners.Basic.closeableListener);\n}\n\n// Elements with [data-toggle-focus] will respond to coming in and out of focus\nTriggers.Initializers.addToggleFocusListener = ($elem) => {\n  $elem.off('focus.zf.trigger blur.zf.trigger', Triggers.Listeners.Basic.toggleFocusListener);\n  $elem.on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', Triggers.Listeners.Basic.toggleFocusListener);\n}\n\n\n\n// More Global/complex listeners and triggers\nTriggers.Listeners.Global  = {\n  resizeListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('resizeme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a resize event\n    $nodes.attr('data-events', \"resize\");\n  },\n  scrollListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('scrollme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a scroll event\n    $nodes.attr('data-events', \"scroll\");\n  },\n  closeMeListener: function(e, pluginId){\n    let plugin = e.namespace.split('.')[0];\n    let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n    plugins.each(function(){\n      let _this = $(this);\n      _this.triggerHandler('close.zf.trigger', [_this]);\n    });\n  }\n}\n\n// Global, parses whole document.\nTriggers.Initializers.addClosemeListener = function(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames = plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, Triggers.Listeners.Global.closeMeListener);\n  }\n}\n\nfunction debounceGlobalListener(debounce, trigger, listener) {\n  let timer, args = Array.prototype.slice.call(arguments, 3);\n  $(window).off(trigger).on(trigger, function(e) {\n    if (timer) { clearTimeout(timer); }\n    timer = setTimeout(function(){\n      listener.apply(null, args);\n    }, debounce || 10);//default time to emit scroll event\n  });\n}\n\nTriggers.Initializers.addResizeListener = function(debounce){\n  let $nodes = $('[data-resize]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'resize.zf.trigger', Triggers.Listeners.Global.resizeListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addScrollListener = function(debounce){\n  let $nodes = $('[data-scroll]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'scroll.zf.trigger', Triggers.Listeners.Global.scrollListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addMutationEventsListener = function($elem) {\n  if(!MutationObserver){ return false; }\n  let $nodes = $elem.find('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n\n    //trigger the event handler for the element depending on type\n    switch (mutationRecordsList[0].type) {\n      case \"attributes\":\n        if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        }\n        if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n         }\n        if (mutationRecordsList[0].attributeName === \"style\") {\n          $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        }\n        break;\n\n      case \"childList\":\n        $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n        $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        break;\n\n      default:\n        return false;\n      //nothing\n    }\n  };\n\n  if ($nodes.length) {\n    //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n    for (var i = 0; i <= $nodes.length - 1; i++) {\n      var elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe($nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n    }\n  }\n}\n\nTriggers.Initializers.addSimpleListeners = function() {\n  let $document = $(document);\n\n  Triggers.Initializers.addOpenListener($document);\n  Triggers.Initializers.addCloseListener($document);\n  Triggers.Initializers.addToggleListener($document);\n  Triggers.Initializers.addCloseableListener($document);\n  Triggers.Initializers.addToggleFocusListener($document);\n\n}\n\nTriggers.Initializers.addGlobalListeners = function() {\n  let $document = $(document);\n  Triggers.Initializers.addMutationEventsListener($document);\n  Triggers.Initializers.addResizeListener();\n  Triggers.Initializers.addScrollListener();\n  Triggers.Initializers.addClosemeListener();\n}\n\n\nTriggers.init = function ($, Foundation) {\n  onLoad($(window), function () {\n    if ($.triggersInitialized !== true) {\n      Triggers.Initializers.addSimpleListeners();\n      Triggers.Initializers.addGlobalListeners();\n      $.triggersInitialized = true;\n    }\n  });\n\n  if(Foundation) {\n    Foundation.Triggers = Triggers;\n    // Legacy included to be backwards compatible for now.\n    Foundation.IHearYou = Triggers.Initializers.addGlobalListeners\n  }\n}\n\nexport {Triggers};\n"]}